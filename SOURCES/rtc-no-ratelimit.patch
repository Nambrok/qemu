Don't rate limit RTC_CHANGE events

Windows doesn't use the RTC_SET bit in Register B so whenever it
changes the RTC it results in multiple timeoffset ioreqs as each
register is written. Remove rate limiting of RTC_CHANGE events otherwise
some get lost and the time offset stored by XAPI gets out of sync. This
doesn't lessen security since RTC updates were not rate limited with
qemu-trad (and a guest can consume a lot of dom0 CPU by just writing
random IO ports anyway).

diff --git a/monitor/monitor.c b/monitor/monitor.c
index 3ef28171c0..3d63e2e01a 100644
--- a/monitor/monitor.c
+++ b/monitor/monitor.c
@@ -226,7 +226,6 @@ int error_vprintf_unless_qmp(const char *fmt, va_list ap)
 
 static MonitorQAPIEventConf monitor_qapi_event_conf[QAPI_EVENT__MAX] = {
     /* Limit guest-triggerable events to 1 per second */
-    [QAPI_EVENT_RTC_CHANGE]        = { 1000 * SCALE_MS },
     [QAPI_EVENT_WATCHDOG]          = { 1000 * SCALE_MS },
     [QAPI_EVENT_BALLOON_CHANGE]    = { 1000 * SCALE_MS },
     [QAPI_EVENT_QUORUM_REPORT_BAD] = { 1000 * SCALE_MS },
